<!-- Autogenerated: Edit `README.md.tpl` and run `zig build readme` -->

# {[name]s} [![CI Status][ci-badge]][ci-url] ![License: MIT][license-badge]

[ci-badge]: {[repo]s}/actions/workflows/checks.yml/badge.svg
[ci-url]: {[repo]s}
[license-badge]: https://img.shields.io/badge/license-MIT-blue.svg?style=shield

A lexer to parse command line arguments

> [!NOTE]
> This is not a full CLI parser.
> A lot of functionality is intentionally missing.

## Features / Parsing capabilities*

- Long arguments: `--flag`
    - values separated by space or `=` (`--flag=value`, `--flag value`)
    - multiple occurrences: `--flag one --flag two`
- Short arguments: `-a`
    - multiple flags grouped together: `-abc`
    - values separated by space or `=` (`-a=value`, `-a value`, `-avalue`)
    - repeated flags: `-vvvv`
- Positional arguments: `arg`
    - escaping remaining arguments after `--`

_*_: Some of those features are not directly implemented by this library.
However, parsers written using the lexer can choose to support those features
and are not locked out of anything.

## Non-Features

- help generation
- arguments to type mapping
- builder API

## Installation

Update to latest version:

```sh
zig fetch --save git+https://github.com/knutwalker/args-lex.git
```

Add to `build.zig`:

```zig
exe.root_module.addImport("args-lex", b.dependency("args-lex", .{{}}).module("args-lex"));
```

> [!IMPORTANT]
> `{[name]s}` tracks Zig `0.13.0`

## Examples

### Demo

A simple demo, showing the basics of the API:

```zig
{[demo]s}
```

## License

{[name]s} is licensed under the [MIT License](http://opensource.org/licenses/MIT)

---

<!-- vim: set ft=markdown: -->
